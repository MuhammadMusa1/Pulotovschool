import java.time.LocalDate;
import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

// –ö–ª–∞—Å—Å Task ‚Äî –æ–ø–∏—Å—ã–≤–∞–µ—Ç –∑–∞–¥–∞—á—É
class Task {
    private String title;
    private String description;
    private LocalDate dueDate;
    private boolean completed;

    public Task(String title, String description, LocalDate dueDate) {
        this.title = title;
        this.description = description;
        this.dueDate = dueDate;
        this.completed = false;
    }

    public String getTitle() {
        return title;
    }

    public boolean isCompleted() {
        return completed;
    }

    public void markAsDone() {
        this.completed = true;
    }

    @Override
    public String toString() {
        return (completed ? "[‚úî]" : "[ ]") + " " + title + " (–¥–æ " + dueDate + ")";
    }
}

// –ö–ª–∞—Å—Å TaskManager ‚Äî —É–ø—Ä–∞–≤–ª—è–µ—Ç —Å–ø–∏—Å–∫–æ–º –∑–∞–¥–∞—á
class TaskManager {
    private List<Task> tasks = new ArrayList<>();

    public void addTask(Task task) {
        tasks.add(task);
    }

    public void showAllTasks() {
        if (tasks.isEmpty()) {
            System.out.println("–ù–µ—Ç –∑–∞–¥–∞—á.");
            return;
        }
        for (int i = 0; i < tasks.size(); i++) {
            System.out.println((i + 1) + ". " + tasks.get(i));
        }
    }

    public void markTaskAsDone(int index) {
        if (index < 1 || index > tasks.size()) {
            System.out.println("–ù–µ–≤–µ—Ä–Ω—ã–π –Ω–æ–º–µ—Ä –∑–∞–¥–∞—á–∏.");
            return;
        }
        tasks.get(index - 1).markAsDone();
        System.out.println("‚úÖ –ó–∞–¥–∞—á–∞ –æ—Ç–º–µ—á–µ–Ω–∞ –∫–∞–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω–∞—è!");
    }
}

// –û—Å–Ω–æ–≤–Ω–æ–π –∫–ª–∞—Å—Å –ø—Ä–æ–≥—Ä–∞–º–º—ã
public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        TaskManager manager = new TaskManager();

        while (true) {
            System.out.println("\n=== –ú–µ–Ω–µ–¥–∂–µ—Ä –∑–∞–¥–∞—á ===");
            System.out.println("1. –î–æ–±–∞–≤–∏—Ç—å –∑–∞–¥–∞—á—É");
            System.out.println("2. –ü–æ–∫–∞–∑–∞—Ç—å –∑–∞–¥–∞—á–∏");
            System.out.println("3. –û—Ç–º–µ—Ç–∏—Ç—å –∑–∞–¥–∞—á—É –∫–∞–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—É—é");
            System.out.println("4. –í—ã—Ö–æ–¥");
            System.out.print("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ: ");
            int choice = scanner.nextInt();
            scanner.nextLine(); // –æ—á–∏—Å—Ç–∏—Ç—å –≤–≤–æ–¥

            switch (choice) {
                case 1:
                    System.out.print("–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏: ");
                    String title = scanner.nextLine();
                    System.out.print("–í–≤–µ–¥–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ: ");
                    String desc = scanner.nextLine();
                    System.out.print("–í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É (–≤ —Ñ–æ—Ä–º–∞—Ç–µ –ì–ì–ì–ì-–ú–ú-–î–î): ");
                    LocalDate date = LocalDate.parse(scanner.nextLine());
                    manager.addTask(new Task(title, desc, date));
                    System.out.println("‚úÖ –ó–∞–¥–∞—á–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞!");
                    break;
                case 2:
                    manager.showAllTasks();
                    break;
                case 3:
                    manager.showAllTasks();
                    System.out.print("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –∑–∞–¥–∞—á–∏: ");
                    int num = scanner.nextInt();
                    manager.markTaskAsDone(num);
                    break;
                case 4:
                    System.out.println("üëã –î–æ –≤—Å—Ç—Ä–µ—á–∏!");
                    System.exit(0);
                    break;
                default:
                    System.out.println("–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.");
            }
        }
    }
}
